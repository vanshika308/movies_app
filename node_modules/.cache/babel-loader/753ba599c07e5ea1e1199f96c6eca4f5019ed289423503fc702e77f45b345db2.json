{"ast":null,"code":"var _jsxFileName = \"D:\\\\beginning of react\\\\sharpener\\\\restApiReact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function fetchMoviesHandler() {\n  try {\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => ({\n      id: movieData.episode_id,\n      title: movieData.title,\n      openingText: movieData.opening_crawl,\n      releasedate: movieData.release_date\n    }));\n    return transformedMovies;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return [];\n  }\n}\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    const moviesData = await fetchMoviesHandler();\n    setMovies(moviesData);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releasedate","release_date","error","console","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMovies","moviesData","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/beginning of react/sharpener/restApiReact/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nasync function fetchMoviesHandler() {\n  try {\n    const response = await fetch('https://swapi.dev/api/films/');\n\n\n    const data = await response.json();\n\n    const transformedMovies = data.results.map((movieData) => ({\n      id: movieData.episode_id,\n      title: movieData.title,\n      openingText: movieData.opening_crawl,\n      releasedate: movieData.release_date,\n    }));\n\n    return transformedMovies;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return [];\n  }\n}\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const[isLoading, setIsLoading] = useState(false);\n\n  const fetchMovies = async () => {\n    setIsLoading(true);\n    const moviesData = await fetchMoviesHandler();\n    setMovies(moviesData);\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading  && <MoviesList movies={movies} />}\n        {isLoading  && <p>Loading.......</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAeC,kBAAkBA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAG5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,KAAM;MACzDC,EAAE,EAAED,SAAS,CAACE,UAAU;MACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;MACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;MACpCC,WAAW,EAAEN,SAAS,CAACO;IACzB,CAAC,CAAC,CAAC;IAEH,OAAOV,iBAAiB;EAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,OAAO,EAAE;EACX;AACF;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEhD,MAAM4B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,UAAU,GAAG,MAAMzB,kBAAkB,CAAC,CAAC;IAC7CqB,SAAS,CAACI,UAAU,CAAC;IACrBF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACExB,OAAA,CAACJ,KAAK,CAAC+B,QAAQ;IAAAC,QAAA,gBACb5B,OAAA;MAAA4B,QAAA,eACE5B,OAAA;QAAQ6B,OAAO,EAAEJ,WAAY;QAAAG,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACVjC,OAAA;MAAA4B,QAAA,GACG,CAACL,SAAS,iBAAKvB,OAAA,CAACF,UAAU;QAACuB,MAAM,EAAEA;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7CV,SAAS,iBAAKvB,OAAA;QAAA4B,QAAA,EAAG;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACb,EAAA,CAtBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}